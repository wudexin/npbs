/**
 * 
 */
package com.nantian.npbs.test.packet.ISO8583;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import com.nantian.npbs.packet.BusinessMessage;
import com.nantian.npbs.packet.ControlMessage;
import com.nantian.npbs.packet.PacketOperationException;
import com.nantian.npbs.packet.business.ISO8583.ISO8583PacketHeaderHelper;
import com.nantian.npbs.common.utils.ConvertUtils;

/**
 * @author TsaiYee
 *
 */
public class PacketHeaderHelperTest extends Assert {
	@Before
	public void setUp() {
	}
	
	@After
	public void tearDown() {
	}	
	
	@Test
	public void testUnpack() {

		String hexString1 = "00a86081cb0003602200000637021000" + 
		"3800810ed08011506615091808201105" + 
		"30010011313531323838383835383020" +
		"110530289085042ad7d32a3030313233" +
		"34353637382020202020202020202020" + 
		"20303536303031363620202020202020" +
		"20202020200053d3c3bba7bac5c2eba3" +
		"ba31353132383838383538300ac7b7b7" +
		"d1bdf0b6eea3ba2d312e35340ad3c3bb" +
		"a7c3fbb3c6a3ba2ad7d32a0a31353600" +
		"1001762072e5e369237c";
		
		//ic pay
		String hexString="02a96000038277602200000901020050"+
		"20008114c09211196221881210017188"+
		"56100000000200009009040000103035"+
		"34363137323335370104996221881210"+
		"017188561d1561560000000000000003"+
		"000000214141449121d000000000000d"+
		"000000000000d00000007090600060d1"+
		"a6b7e520202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202030"+
		"35303031303232202020202020202020"+
		"202020313536999eae8722341ffd0448"+
		"30303030303030303030373637393137"+
		"31383730303030303030303030303736"+
		"37393137313837304339334131463642"+
		"38323933304538434433363043383339"+
		"31443835464631323030303030303030"+
		"30303030303030303030303330303030"+
		"31313533303030303033383430303030"+
		"30303030303030303438353630313030"+
		"30303030303030303030303030303030"+
		"30303030303030303030303030303030"+
		"30303030202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202030353436"+
		"31373233353720202020202020202020"+
		"d1a6b7e5202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"202020202020202020202020bad3b1b1"+
		"caa1caafbcd2d7afcad0d0c2bbaac7f8"+
		"b1b1b6febbb7c3f7d6e9b9abd4b0b1b1"+
		"b2e0a3acbaecd0c7d0a1c7f8cef7b2e0"+
		"3323c2a531b5a5d4aa33303220202020"+
		"202020202020202020202020b3c7d5f2"+
		"bed3c3f1b2bbc2fa314b562020202020"+
		"20202020202020202020353220202020"+
		"20202020202020202020302020202020"+
		"34342020202020202020202020202020"+
		"010002b43755519fa390b4";
		
		ISO8583PacketHeaderHelper headerHelper = new ISO8583PacketHeaderHelper();
		ControlMessage cm = new ControlMessage();
		BusinessMessage bm = new BusinessMessage();
		try {
			byte[] bits = ConvertUtils.hexStr2Bytes(hexString);
			headerHelper.unpack(bits, cm, bm);
		} catch (PacketOperationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		assertEquals("0200", cm.getPacketHeader().getMessageType());
	}
}
