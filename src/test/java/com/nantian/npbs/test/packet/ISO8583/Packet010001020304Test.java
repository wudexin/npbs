/**
 * 
 */
package com.nantian.npbs.test.packet.ISO8583;

import java.util.HashMap;
import java.util.Map;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import com.nantian.npbs.common.GlobalConst.CHANEL_TYPE;
import com.nantian.npbs.common.GlobalConst.DATA_TYPE;
import com.nantian.npbs.packet.BusinessMessage;
import com.nantian.npbs.packet.ControlMessage;
import com.nantian.npbs.packet.IPacket;
import com.nantian.npbs.packet.PacketOperationException;
import com.nantian.npbs.packet.PacketUtils;
import com.nantian.npbs.packet.business.ISO8583.ISO8583PacketHelper;
import com.nantian.npbs.common.utils.ConvertUtils;

/**
 * 针对缴费、缴费查询、写卡、写卡确认四个交易为同一用户情况的报文进行测试
 * 交易名称:		河电IC卡查询	
 * 交易码:		010001	010002	010003	010004
 * 05220118
 * @author victor
 *
 */
public class Packet010001020304Test extends Assert {
	
	@Before
	public void setUp() {
	}
	
	@After
	public void tearDown() {
	}	
	
	@Test
	public void test8583Pay() {
		//河电IC卡查询	010001
		/*String hexString01="012a6000038099602200000737020000"+
		"20000100c08211404994001637394631"+
		"38434236393931424242454347505253"+
		"3a202020202000002020202020202020"+
		"30353232303131382020202020202020"+
		"20202020313536020030303030303030"+
		"30303037363739343530353032313233"+
		"34353443453937424632433046373946"+
		"31384342363939314242424543303030"+
		"30303030303030303030303030303030"+
		"32303030303036393230303030303030"+
		"30303030303030323030303030343633"+
		"33303130303030303030303030303030"+
		"30303030303030303030303030303030"+
		"30303030303030303020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20010001968cc5fdac45432d";*/
		
		//010002		河电IC卡缴费
		/*String hexString02="02a96000038069602200000737020050"+
		"20008114c09211196221881210016996"+
		"78200000000208004049950000103032"+
		"38343335383835310104996221881210"+
		"016996782d1561560000000000000003"+
		"000000214141449121d000000000000d"+
		"000000000000d00000004550600060ca"+
		"afc7ef20202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202030"+
		"35323230313138202020202020202020"+
		"2020203135366c3feb7d55e91c1f0448"+
		"30303030303030303030373637393435"+
		"30353032303030303030303030303736"+
		"37393435303530323132333435344345"+
		"39374246324330463739463138434236"+
		"39393142424245433030303030303030"+
		"30303030303030303030303230303030"+
		"30363932303030303030303030303030"+
		"30303230303030303436333330313030"+
		"30303030303030303030303030303030"+
		"30303030303030303030303030303030"+
		"30303030202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202030323834"+
		"33353838353120202020202020202020"+
		"caafc7ef202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"202020202020202020202020b3c7b9d8"+
		"d5f2cbfec9cf20202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"202020202020202020202020c5a9b4e5"+
		"b5bdbba7bed3c3f12020202020202020"+
		"20202020202020202020353220202020"+
		"20202020202020202020302020202020"+
		"31362020202020202020202020202020"+
		"010002c40fcf7adfcd3d85";*/
		
		//010003
		/**/String hexString03="01336000038309602200000737080000"+
		"20000000c00211404996202020202020"+
		"20202020202020202020202020203035"+
		"32323031313820202020202020202020"+
		"20200230323031313038323930333832"+
		"30303036354646463233323438443144"+
		"33333030303030303030303037363739"+
		"34353035303231323334353443453937"+
		"42463243304637394631384342363939"+
		"31424242454330303030303030303030"+
		"30303030303030303032303030303036"+
		"39323030303030303030303030303030"+
		"32303030303034363333303130303030"+
		"30303030303030303030303030303030"+
		"30303030303030303030303030303030"+
		"30302020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"20202020202020202020202020202020"+
		"202020202020202020200100031ef1a1"+
		"e01b778e5d";
		
		//010004
		/*String hexString04="005f60000380f7602200000737080000"+
		"20000000c00211404997202020202020"+
		"20202020202020202020202020203035"+
		"32323031313820202020202020202020"+
		"20200018323031313038323930333832"+
		"3030303130310100042052fe00c965e1"+
		"e3";*/
		
		IPacket packetHelper = new ISO8583PacketHelper();
		
		//unpack
		ControlMessage cm = new ControlMessage();
		cm.setChanelType(CHANEL_TYPE.POS);
		BusinessMessage bm = new BusinessMessage();
		byte[] origPacket = ConvertUtils.hexStr2Bytes(hexString03);
		Map<DATA_TYPE, Object> map = new HashMap<DATA_TYPE, Object>();
		map.put(DATA_TYPE.ORIGREQPACKET, origPacket);
		map.put(DATA_TYPE.CONTROLOBJECT, cm);
		map.put(DATA_TYPE.BUSINESSOBJECT, bm);
		try {
			packetHelper.unpackObject(map);
		} catch (PacketOperationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		cm = (ControlMessage)map.get(DATA_TYPE.CONTROLOBJECT);
		bm = (BusinessMessage)map.get(DATA_TYPE.BUSINESSOBJECT);
		System.out.println("msgtype: " + cm.getPacketHeader().getMessageType());
		
		System.out.println("OrigPbSeqno  OrigPbSeqno  OrigPbSeqno: " +  bm.getShopCode());
		System.out.println("OrigPbSeqno  OrigPbSeqno  OrigPbSeqno: " +  bm.getOrigPbSeqno());
		
		assertEquals("010003", bm.getTranCode());
		assertEquals("05220118", bm.getShopCode());
		assertEquals("20110829038200", bm.getOrigPbSeqno());			//测试原流水号一样  OrigPbSeqno
		
		
		cm.setResultCode("000000");
		bm.setLocalDate("20110830");
		bm.setLocalTime("123143");
		bm.setPbSeqno("12405");
		
		Map<DATA_TYPE, Object> message = new HashMap<DATA_TYPE, Object>();
		message.put(DATA_TYPE.CONTROLOBJECT, cm);
		message.put(DATA_TYPE.BUSINESSOBJECT, bm);
		
		//pack
		try {
			packetHelper.packBuffer(message);
			String resultHexString = ConvertUtils.bytes2HexStr((byte[])PacketUtils.getOrigAnsPacket(message));
			System.out.println(resultHexString);
		} catch (PacketOperationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}
